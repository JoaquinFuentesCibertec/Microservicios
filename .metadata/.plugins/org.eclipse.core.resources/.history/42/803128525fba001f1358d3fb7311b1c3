package com.proyecto.controller;
import com.openhtmltopdf.pdfboxout.PdfRendererBuilder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;

import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.IOException;

@RestController
@RequestMapping("/reportes")
public class ReporteClienteController {

    @GetMapping(value = "/clientes-html", produces = MediaType.APPLICATION_PDF_VALUE)
    public ResponseEntity<byte[]> generarReporteDesdeHtml() throws IOException {

        String htmlFilePath = "src/main/resources/templates/reportecliente.html";

        try (FileInputStream htmlInputStream = new FileInputStream(htmlFilePath)) {
            ByteArrayOutputStream pdfOutputStream = new ByteArrayOutputStream();
            
            // Usamos PdfRendererBuilder para convertir el HTML a PDF
            PdfRendererBuilder builder = new PdfRendererBuilder();
            builder.useFastMode();
            builder.withHtmlContent(htmlInputStream, null)
            builder.toStream(pdfOutputStream);
            builder.run();

            // Configurar la respuesta HTTP
            HttpHeaders headers = new HttpHeaders();
            headers.setContentType(MediaType.APPLICATION_PDF);
            headers.setContentDispositionFormData("filename", "reporte_clientes.pdf");

            return ResponseEntity.ok()
                    .headers(headers)
                    .body(pdfOutputStream.toByteArray());
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.internalServerError().build();
        }
    }
}

